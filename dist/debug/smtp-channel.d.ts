export declare class SMTPChannel {
    private _config;
    private _socket;
    private _receiveBuffer;
    private _sendBuffer;
    private _isSecure;
    private _net;
    private _tls;
    private _stream;
    private closeSubject;
    private commandSubject;
    private connectSubject;
    private endSubject;
    private errorSubject;
    private receiveSubject;
    private replySubject;
    private sendSubject;
    private timeoutSubject;
    constructor(config: any);
    connect(handler: any, expireTime: number): Promise<any>;
    close(expireTime: number): Promise<any>;
    write(data: any, handler?: any, expireTime?: number): Promise<any>;
    negotiateTLS(config: any): Promise<any>;
    isSecure(): boolean;
    parseReplyCode(line: any): any;
    isLastReply(line: any): boolean;
    private _createSocket;
    private _connectAsPromised;
    private _closeAsPromised;
    private _writeAsPromised;
    private _negotiateTLSAsPromised;
    private _resolveCommand;
    private _convertToStream;
    private _createOnSendStream;
    private _onClose;
    private _onCommand;
    private _onConnect;
    private _onEnd;
    private _onError;
    private _onReceive;
    private _onReply;
    private _onSend;
    private _onTimeout;
}
